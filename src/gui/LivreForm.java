/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import beans.ECategorie;
import beans.Livre;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import services.LivreService;

public class LivreForm extends javax.swing.JInternalFrame {

    private LivreService ls;
    private DefaultTableModel model;

    /**
     * Creates new form LivreForm
     */
    public LivreForm() {
        MDIApplication app = MDIApplication.getInstance();
        initComponents();
        ls = new LivreService();
        model = (DefaultTableModel) livreList.getModel();
        loadLivre();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTitre = new javax.swing.JTextField();
        txtAuteur = new javax.swing.JTextField();
        listCategorie = new javax.swing.JComboBox();
        oui = new javax.swing.JRadioButton();
        non = new javax.swing.JRadioButton();
        bnAddLivre = new javax.swing.JButton();
        bnDeleteLivre = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        livreList = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(680, 540));

        jPanel1.setBackground(new java.awt.Color(247, 240, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestion des livres", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 18))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(221, 207, 178));
        jLabel1.setText("Titre:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(221, 207, 178));
        jLabel2.setText("Auteur: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(221, 207, 178));
        jLabel3.setText("Catégorie:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(221, 207, 178));
        jLabel4.setText("Disponible:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));
        jPanel1.add(txtTitre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 190, -1));

        txtAuteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuteurActionPerformed(evt);
            }
        });
        jPanel1.add(txtAuteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 190, -1));

        listCategorie.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        listCategorie.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "roman", "nouvelle", "autobiographie", "policier", "romance" }));
        listCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listCategorieActionPerformed(evt);
            }
        });
        jPanel1.add(listCategorie, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 190, -1));

        buttonGroup1.add(oui);
        oui.setForeground(new java.awt.Color(255, 246, 236));
        oui.setText("Oui");
        oui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouiActionPerformed(evt);
            }
        });
        jPanel1.add(oui, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        buttonGroup1.add(non);
        non.setForeground(new java.awt.Color(255, 246, 236));
        non.setText("Non");
        jPanel1.add(non, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, -1, -1));

        bnAddLivre.setBackground(new java.awt.Color(20, 186, 20));
        bnAddLivre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bnAddLivre.setText("Ajouter");
        bnAddLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddLivreActionPerformed(evt);
            }
        });
        jPanel1.add(bnAddLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 95, 120, 30));

        bnDeleteLivre.setBackground(java.awt.Color.red);
        bnDeleteLivre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bnDeleteLivre.setText("Supprimer");
        bnDeleteLivre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDeleteLivreActionPerformed(evt);
            }
        });
        jPanel1.add(bnDeleteLivre, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 140, 120, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/book.PNG"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        jPanel2.setBackground(new java.awt.Color(247, 240, 225));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des livres", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 18))); // NOI18N

        livreList.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        livreList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Titre", "Auteur", "Catégorie", "Disponible"
            }
        ));
        jScrollPane1.setViewportView(livreList);
        if (livreList.getColumnModel().getColumnCount() > 0) {
            livreList.getColumnModel().getColumn(0).setHeaderValue("id");
            livreList.getColumnModel().getColumn(1).setHeaderValue("Titre");
            livreList.getColumnModel().getColumn(2).setHeaderValue("Auteur");
            livreList.getColumnModel().getColumn(3).setHeaderValue("Catégorie");
            livreList.getColumnModel().getColumn(4).setHeaderValue("Disponible");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAuteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuteurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuteurActionPerformed

    private void bnAddLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddLivreActionPerformed
        String titre = txtTitre.getText();
        String auteur = txtAuteur.getText();
        String selectedCategory = (String) listCategorie.getSelectedItem();
        ECategorie categorie = ECategorie.valueOf(selectedCategory);

        if (titre.isEmpty() || auteur.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Le titre et l'auteur sont obligatoires.","Avertissement", JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean disponible = oui.isSelected();

        if (ls.create(new Livre(titre, auteur, categorie, disponible))) {
            JOptionPane.showMessageDialog(this, "Livre enregistré avec succès!","Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement du livre.","Erreur", JOptionPane.ERROR_MESSAGE);
        }
        loadLivre();
    }//GEN-LAST:event_bnAddLivreActionPerformed
    void loadLivre() {
        model.setRowCount(0);
        for (Livre l : ls.findAll()) {
            model.addRow(new Object[]{l.getId(), l.getTitre(), l.getAuteur(), l.getCategorie(), l.getDisponible()});
        }
    }
    private void ouiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ouiActionPerformed

    private void listCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listCategorieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listCategorieActionPerformed

    private void bnDeleteLivreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDeleteLivreActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce livre?","Information", JOptionPane.INFORMATION_MESSAGE);
        if (response == 0) {
            int selectedRow = livreList.getSelectedRow();
            if (selectedRow != -1) {
                int id = (int) livreList.getValueAt(selectedRow, 0);
                ls.delete(ls.findById(id));
                loadLivre();
            } else {
                JOptionPane.showMessageDialog(this, "Aucun livre sélectionné.","Avertissement", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_bnDeleteLivreActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnAddLivre;
    private javax.swing.JButton bnDeleteLivre;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox listCategorie;
    private javax.swing.JTable livreList;
    private javax.swing.JRadioButton non;
    private javax.swing.JRadioButton oui;
    private javax.swing.JTextField txtAuteur;
    private javax.swing.JTextField txtTitre;
    // End of variables declaration//GEN-END:variables
}
